# Branches that trigger a build on commit
trigger:
- dev
- arcade

# Branches that trigger builds on PR
pr:
- dev
- arcade

jobs:

- job: Windows
  pool:
    name: NetCorePublic-Int-Pool
    queue: buildpool.windows.10.amd64.vs2017.open
  variables:
    _os: Windows
  strategy:
    maxParallel: 2
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  timeoutInMinutes: 20
  steps:
    - script: $(Build.SourcesDirectory)\eng\common\cibuild.cmd -configuration $(_configuration) -prepareMachine
      displayName: Build and Test
    - task: PublishTestResults@1
      inputs:
        testRunner: XUnit
        testResultsFiles: '$(Build.SourcesDirectory)\artifacts\TestResults\$(_configuration)\*.xml'
        mergeTestResults: true
        testRunTitle: '$(_os) $(_configuration)'
      condition: always()
    - task: PublishBuildArtifacts@1
      displayName: Publish Logs
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\log\$(_configuration)'
        ArtifactName: '$(_os) $(_configuration)'
      continueOnError: true
      condition: not(succeeded())

- job: ProjectSystem
  pool:
    name: NetCorePublic-Pool
    queue: buildpool.windows.10.amd64.vs2019.pre.open
  strategy:
    maxParallel: 4
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  timeoutInMinutes: 20
  steps:
    - script: $(Build.SourcesDirectory)\build\CIBuild.cmd -configuration $(_configuration) -prepareMachine -sign
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\log'
        ArtifactName: '$(_configuration) unit test logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\bin'
        ArtifactName: '$(_configuration) bin folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\VSSetup'
        ArtifactName: '$(_configuration) VSSetup folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\TestResults'
        ArtifactName: '$(_configuration) Test Result Logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishTestResults@2
      inputs:
        testRunner: 'xUnit'
        testResultsFiles: '**/*.xml' 
        searchFolder: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\TestResults'
        configuration: '$(_configuration)'
        publishRunAttachments: true
        failTaskOnFailedTests: true
      continueOnError: true
      condition: always()